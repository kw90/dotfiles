#!/usr/bin/env bash
# Custom Aliases

alias vim="nvim"
alias cat="ccat"
alias less="cless"
alias c="clear"
alias dvresolve="/opt/resolve/bin/resolve"
alias handbrake="/usr/bin/ghb"
alias shadow-tech="/opt/shadow-beta/shadow-preprod"
alias notes="(cd ~/notes; vim .)"
alias todo="(cd ~/notes; vim todo.txt)"
alias fix-ntfs="(sudo ntfsfix /dev/sdb1; sudo umount /mnt/data; sudo mount -av)"
alias lp="dmenu-lpass-nu"

eval "$(thefuck --alias)"
export VISUAL=nvim

docker-xauth() {
        # XSOCK=/tmp/.X11-unix
        XAUTH=/tmp/.docker.xauth
        if [[ -f "$XAUTH" ]]; then
                sudo rm -r $XAUTH
        fi
        touch $XAUTH
        xauth nlist "$DISPLAY" | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
}

openclose() {
    "$@" &
    disown
    exit
}

xtract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)
                tar xvjf "$1"
            ;;
            *.tar.gz)
                tar xvzf "$1"
            ;;
            *.bz2)
                bunzip2 "$1"
            ;;
            *.rar)
                unrar x "$1"
            ;;
            *.gz)
                gunzip "$1"
            ;;
            *.tar)
                tar xvf "$1"
            ;;
            *.tbz2)
                tar xvjf "$1"
            ;;
            *.tgz)
                tar xvzf "$1"
            ;;
            *.zip)
                unzip "$1"
            ;;
            *.Z)
                uncompress "$1"
            ;;
            *.7z)
                7z x "$1"
            ;;
            *)
                echo "Unable to extract '$1'"
            ;;
        esac;
    else
        echo "'$1' is not a valid file";
    fi
}

free-space() {
    echo "Cleaning up disk..."
    read -r "REPLY?Do you want to prune the docker system? [y/N]"
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        docker system prune -f
    fi

    read -r "REPLY?Do you want to remove all docker volumes? [y/N]"
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        docker volume rm "$(docker volume ls -q)"
    fi
    read -r "REPLY?Do you want to remove all docker images? [y/N]"
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        docker image rm "$(docker images -q)"
    fi
}
